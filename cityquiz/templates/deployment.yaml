apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-webserver
  labels:
    app.kubernetes.io/name: "webserver"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "webserver"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "webserver"
    spec:
      containers:
        - name: "webserver"
          image: {{ .Values.image.name }}:{{ .Values.image.tag | default "latest" }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: INSTANCE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  key: adminpanel-token
                  name: secrets
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: db-user-name
                  name: secrets
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: db-user-password
            - name: MYSQL_HOST
              value: {{ .Values.mysql.host | quote }}
            - name: MYSQL_PORT
              value: {{ .Values.mysql.port | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.auth.database | quote }}
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: filestorage-access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: filestorage-secret-key
            - name: MINIO_ENDPOINT
              value: {{ .Values.filestorage.endpoint }}
            - name: MINIO_BUCKET
              value: {{ .Values.filestorage.bucket | quote}}
            {{ if .Values.mssql.sqlserverjdbc }}
            - name: MSSQL_JDBC_URL
              value: {{ .Values.mssql.sqlserverjdbc | quote }}
            {{ end }}
{{ if .Values.mysql.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: mysql:8.0.35
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: db-root-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: db-user-name
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: db-user-password
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.auth.database }}
          ports:
            - containerPort: 3306
              name: mysql
{{ end }}
{{ if .Values.filestorage.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-minio
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:RELEASE.2023-10-07T15-07-38Z
          args:
            - server
            - /data
          ports:
            - containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: filestorage-access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: filestorage-secret-key
                  name: secrets
            - name: MINIO_BROWSER
              value: "off"
{{ end }}